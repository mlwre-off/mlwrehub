-- Enhanced GUI Module: шикарный и современный интерфейс аутентификации ключа
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Создание ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "QUESTXGUI_Premium"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 999999
screenGui.ScreenInsets = Enum.ScreenInsets.None
screenGui.Parent = game.CoreGui

-- Современная цветовая палитра
local colors = {
    background = Color3.fromRGB(15, 15, 20),
    card = Color3.fromRGB(30, 30, 40),
    accent = Color3.fromRGB(86, 21, 255),
    accentSecondary = Color3.fromRGB(150, 70, 255),
    text = Color3.fromRGB(255, 255, 255),
    textSecondary = Color3.fromRGB(200, 200, 220),
    success = Color3.fromRGB(46, 204, 113),
    warning = Color3.fromRGB(241, 196, 15),
    error = Color3.fromRGB(231, 76, 60)
}

-- Анимированный фон с морфингом
local background = Instance.new("Frame")
background.Name = "AnimatedBackground"
background.Size = UDim2.fromScale(2, 2)
background.Position = UDim2.fromScale(-0.5, -0.5)
background.BackgroundColor3 = colors.background
background.BorderSizePixel = 0
background.ZIndex = 1
background.Parent = screenGui

-- Создание анимированного градиента
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 30)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(30, 25, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
})
gradient.Rotation = 45
gradient.Parent = background

-- Анимация градиента
spawn(function()
    local rotation = 0
    while true do
        rotation = (rotation + 0.1) % 360
        gradient.Rotation = rotation
        wait(0.01)
    end
end)

-- Создание плавающих частиц (glassmorphism элементы)
local function createParticle()
    local particle = Instance.new("Frame")
    particle.BackgroundColor3 = colors.accentSecondary
    particle.BackgroundTransparency = 0.9
    particle.BorderSizePixel = 0
    
    local size = math.random(10, 50)
    particle.Size = UDim2.new(0, size, 0, size)
    
    local xPos = math.random(0, 100) / 100
    local yPos = math.random(0, 100) / 100
    particle.Position = UDim2.new(xPos, 0, yPos, 0)
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = particle
    
    local blur = Instance.new("UIBlur")
    blur.Size = 10
    blur.Parent = particle
    
    particle.Parent = background
    
    -- Анимация движения частицы
    spawn(function()
        local duration = math.random(5, 15)
        local targetX = xPos + (math.random(-20, 20) / 100)
        local targetY = yPos + (math.random(-20, 20) / 100)
        
        local tweenInfo = TweenInfo.new(
            duration,
            Enum.EasingStyle.Sine,
            Enum.EasingDirection.InOut,
            0,
            false,
            0
        )
        
        local tween = TweenService:Create(particle, tweenInfo, {
            Position = UDim2.new(targetX, 0, targetY, 0),
            BackgroundTransparency = 1
        })
        
        tween:Play()
        
        tween.Completed:Connect(function()
            particle:Destroy()
        end)
    end)
end

-- Создание частиц через определенные интервалы
spawn(function()
    while true do
        createParticle()
        wait(0.5)
    end
end)

-- Создание основной карточки (glassmorphism)
local mainCard = Instance.new("Frame")
mainCard.Name = "MainCard"
mainCard.Size = UDim2.new(0, 450, 0, 500)
mainCard.Position = UDim2.new(0.5, -225, 0.5, -250)
mainCard.BackgroundColor3 = colors.card
mainCard.BackgroundTransparency = 0.2
mainCard.BorderSizePixel = 0
mainCard.ZIndex = 10
mainCard.Parent = screenGui

-- Эффект стекла (glassmorphism)
local blur = Instance.new("BlurEffect")
blur.Size = 10
blur.Parent = game.Lighting

-- Закругление углов карточки
local cardCorner = Instance.new("UICorner")
cardCorner.CornerRadius = UDim.new(0, 20)
cardCorner.Parent = mainCard

-- Градиент карточки
local cardGradient = Instance.new("UIGradient")
cardGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60).lerp(colors.accent, 0.05)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 40).lerp(colors.accent, 0.1))
})
cardGradient.Rotation = 45
cardGradient.Parent = mainCard

-- Тень для карточки
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 40, 1, 40)
shadow.Position = UDim2.new(0, -20, 0, -20)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://6014257812"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.6
shadow.ZIndex = 9
shadow.Parent = mainCard

-- Эффект свечения по периметру
local glow = Instance.new("UIStroke")
glow.Color = colors.accent
glow.Transparency = 0.7
glow.Thickness = 2
glow.Parent = mainCard

-- Анимация свечения
spawn(function()
    while true do
        for i = 0.4, 0.8, 0.01 do
            glow.Transparency = i
            wait(0.05)
        end
        for i = 0.8, 0.4, -0.01 do
            glow.Transparency = i
            wait(0.05)
        end
    end
end)

-- Функция для создания современной кнопки
local function createModernButton(parent, text, position, size, primaryColor, secondaryColor)
    local button = Instance.new("TextButton")
    button.Text = text
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.TextColor3 = colors.text
    button.BackgroundColor3 = primaryColor or colors.accent
    button.BackgroundTransparency = 0.2
    button.Size = size or UDim2.new(1, 0, 0, 50)
    button.Position = position
    button.BorderSizePixel = 0
    button.ZIndex = 12
    button.Parent = parent
    
    -- Закругление углов
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = button
    
    -- Градиент
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, primaryColor or colors.accent),
        ColorSequenceKeypoint.new(1, secondaryColor or primaryColor:Lerp(Color3.fromRGB(255, 255, 255), 0.2))
    })
    buttonGradient.Rotation = 90
    buttonGradient.Parent = button
    
    -- Эффект нажатия (микро-анимация)
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {Size = size * UDim2.new(0.98, 0, 0.95, 0)}):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {Size = size}):Play()
    end)
    
    -- Эффект наведения
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3), {BackgroundTransparency = 0.2}):Play()
    end)
    
    return button
end

-- Функция для создания современного текстового поля
local function createModernTextBox(parent, placeholderText, position, size)
    local textBoxContainer = Instance.new("Frame")
    textBoxContainer.Size = size or UDim2.new(1, 0, 0, 50)
    textBoxContainer.Position = position
    textBoxContainer.BackgroundColor3 = colors.card:Lerp(Color3.fromRGB(255, 255, 255), 0.1)
    textBoxContainer.BackgroundTransparency = 0.2
    textBoxContainer.BorderSizePixel = 0
    textBoxContainer.ZIndex = 12
    textBoxContainer.Parent = parent
    
    -- Закругление углов контейнера
    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 10)
    containerCorner.Parent = textBoxContainer
    
    -- Рамка для эффекта фокуса
    local containerStroke = Instance.new("UIStroke")
    containerStroke.Color = colors.textSecondary
    containerStroke.Transparency = 0.7
    containerStroke.Thickness = 1
    containerStroke.Parent = textBoxContainer
    
    -- Текстовое поле
    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(1, -20, 1, 0)
    textBox.Position = UDim2.new(0, 10, 0, 0)
    textBox.BackgroundTransparency = 1
    textBox.Text = ""
    textBox.PlaceholderText = placeholderText
    textBox.PlaceholderColor3 = colors.textSecondary
    textBox.TextColor3 = colors.text
    textBox.Font = Enum.Font.Gotham
    textBox.TextSize = 16
    textBox.TextXAlignment = Enum.TextXAlignment.Left
    textBox.ClearTextOnFocus = false
    textBox.ZIndex = 13
    textBox.Parent = textBoxContainer
    
    -- Эффект фокуса
    textBox.Focused:Connect(function()
        TweenService:Create(containerStroke, TweenInfo.new(0.3), {
            Color = colors.accent,
            Transparency = 0,
            Thickness = 2
        }):Play()
    end)
    
    textBox.FocusLost:Connect(function()
        TweenService:Create(containerStroke, TweenInfo.new(0.3), {
            Color = colors.textSecondary,
            Transparency = 0.7,
            Thickness = 1
        }):Play()
    end)
    
    return textBox, textBoxContainer
end

-- Создание шикарного логотипа
local logo = Instance.new("ImageLabel")
logo.Size = UDim2.new(0, 120, 0, 120)
logo.Position = UDim2.new(0.5, -60, 0, 30)
logo.BackgroundTransparency = 1
logo.Image = "rbxassetid://117511501336791" -- ID изображения из исходного кода
logo.ImageColor3 = colors.text
logo.ZIndex = 11
logo.Parent = mainCard

-- Анимация логотипа
spawn(function()
    while true do
        -- Пульсирующая анимация
        TweenService:Create(logo, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
            Size = UDim2.new(0, 130, 0, 130),
            ImageTransparency = 0.1
        }):Play()
        wait(1.5)
        TweenService:Create(logo, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
            Size = UDim2.new(0, 120, 0, 120),
            ImageTransparency = 0
        }):Play()
        wait(1.5)
    end
end)

-- Создание заголовка
local title = Instance.new("TextLabel")
title.Text = "Quest X Premium"
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 160)
title.Font = Enum.Font.GothamBlack
title.TextSize = 32
title.TextColor3 = colors.text
title.BackgroundTransparency = 1
title.ZIndex = 11
title.Parent = mainCard

-- Подзаголовок
local subtitle = Instance.new("TextLabel")
subtitle.Text = "Введите ваш ключ для доступа к премиум функциям"
subtitle.Size = UDim2.new(1, -40, 0, 20)
subtitle.Position = UDim2.new(0, 20, 0, 210)
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 16
subtitle.TextColor3 = colors.textSecondary
subtitle.BackgroundTransparency = 1
subtitle.TextWrapped = true
subtitle.ZIndex = 11
subtitle.Parent = mainCard

-- Создание поля для ввода ключа
local keyInput, keyInputContainer = createModernTextBox(
    mainCard, 
    "Введите ваш ключ...", 
    UDim2.new(0, 30, 0, 250), 
    UDim2.new(1, -60, 0, 50)
)

-- Создание кнопки проверки ключа
local verifyButton = createModernButton(
    mainCard, 
    "Проверить ключ", 
    UDim2.new(0, 30, 0, 320), 
    UDim2.new(1, -60, 0, 50),
    colors.accent,
    colors.accentSecondary
)

-- Создание кнопки получения ключа
local getKeyButton = createModernButton(
    mainCard,
    "Получить ключ",
    UDim2.new(0, 30, 0, 390),
    UDim2.new(1, -60, 0, 50),
    colors.accentSecondary,
    colors.accent
)

-- Статусное сообщение
local statusMessage = Instance.new("TextLabel")
statusMessage.Text = ""
statusMessage.Size = UDim2.new(1, -60, 0, 30)
statusMessage.Position = UDim2.new(0, 30, 0, 450)
statusMessage.Font = Enum.Font.Gotham
statusMessage.TextSize = 16
statusMessage.TextColor3 = colors.textSecondary
statusMessage.BackgroundTransparency = 1
statusMessage.ZIndex = 11
statusMessage.Parent = mainCard

-- Функция для создания анимированного индикатора загрузки
local function createLoadingIndicator(parent)
    local loadingContainer = Instance.new("Frame")
    loadingContainer.Size = UDim2.new(0, 40, 0, 40)
    loadingContainer.Position = UDim2.new(0.5, -20, 0.5, -20)
    loadingContainer.BackgroundTransparency = 1
    loadingContainer.Visible = false
    loadingContainer.ZIndex = 15
    loadingContainer.Parent = parent
    
    -- Создание элементов загрузки (круговой индикатор)
    for i = 1, 4 do
        local dot = Instance.new("Frame")
        dot.Size = UDim2.new(0, 10, 0, 10)
        dot.BackgroundColor3 = colors.accent
        dot.BorderSizePixel = 0
        dot.ZIndex = 15
        dot.Parent = loadingContainer
        
        local dotCorner = Instance.new("UICorner")
        dotCorner.CornerRadius = UDim.new(1, 0)
        dotCorner.Parent = dot
        
        -- Позиционирование точки
        local angle = math.rad((i - 1) * 90)
        local radius = 15
        local posX = math.cos(angle) * radius + 20
        local posY = math.sin(angle) * radius + 20
        dot.Position = UDim2.new(0, posX - 5, 0, posY - 5)
        
        -- Анимация точки
        spawn(function()
            while true do
                local delay = (i - 1) * 0.2
                wait(delay)
                
                TweenService:Create(dot, TweenInfo.new(0.4), {
                    BackgroundTransparency = 0,
                    Size = UDim2.new(0, 10, 0, 10)
                }):Play()
                
                wait(0.4)
                
                TweenService:Create(dot, TweenInfo.new(0.4), {
                    BackgroundTransparency = 0.8,
                    Size = UDim2.new(0, 7, 0, 7)
                }):Play()
                
                wait(1.2 - delay)
            end
        end)
    end
    
    return loadingContainer
end

-- Создание индикатора загрузки
local loadingIndicator = createLoadingIndicator(mainCard)

-- Функция для показа сообщения о статусе
local function showStatus(message, color, duration)
    statusMessage.Text = message
    statusMessage.TextColor3 = color or colors.textSecondary
    
    -- Анимация появления
    TweenService:Create(statusMessage, TweenInfo.new(0.3), {
        TextTransparency = 0,
        TextStrokeTransparency = 0.7
    }):Play()
    
    if duration then
        wait(duration)
        
        -- Анимация исчезновения
        TweenService:Create(statusMessage, TweenInfo.new(0.3), {
            TextTransparency = 1,
            TextStrokeTransparency = 1
        }):Play()
    end
end

-- Функция для имитации проверки ключа
local function verifyKey()
    -- Показываем индикатор загрузки
    loadingIndicator.Visible = true
    verifyButton.Visible = false
    
    showStatus("Проверка ключа...", colors.warning)
    
    -- Имитация процесса загрузки
    wait(2)
    
    -- Предположим, что ключ верный если его длина больше 8 символов
    if #keyInput.Text >= 8 then
        showStatus("Ключ подтвержден! Доступ открыт.", colors.success)
        
        -- Анимация успешной авторизации
        TweenService:Create(mainCard, TweenInfo.new(0.5), {
            BackgroundColor3 = Color3.fromRGB(40, 70, 45)
        }):Play()
        
        wait(1.5)
        
        -- Анимация закрытия интерфейса
        TweenService:Create(mainCard, TweenInfo.new(0.5), {
            Position = UDim2.new(0.5, -225, 1.5, -250)
        }):Play()
        
        TweenService:Create(background, TweenInfo.new(0.8), {
            BackgroundTransparency = 1
        }):Play()
        
        wait(0.8)
        screenGui:Destroy()
    else
        showStatus("Неверный ключ! Пожалуйста, проверьте и попробуйте снова.", colors.error)
        
        -- Анимация ошибки
        TweenService:Create(keyInputContainer, TweenInfo.new(0.1), {
            Position = UDim2.new(0, 35, 0, 250)
        }):Play()
        wait(0.1)
        TweenService:Create(keyInputContainer, TweenInfo.new(0.1), {
            Position = UDim2.new(0, 25, 0, 250)
        }):Play()
        wait(0.1)
        TweenService:Create(keyInputContainer, TweenInfo.new(0.1), {
            Position = UDim2.new(0, 30, 0, 250)
        }):Play()
        
        loadingIndicator.Visible = false
        verifyButton.Visible = true
    end
end

-- Обработчик нажатия на кнопку проверки ключа
verifyButton.MouseButton1Click:Connect(verifyKey)

-- Обработчик нажатия на кнопку получения ключа
getKeyButton.MouseButton1Click:Connect(function()
    showStatus("Перенаправление на страницу получения ключа...", colors.warning)
    
    -- Анимация нажатия
    TweenService:Create(getKeyButton, TweenInfo.new(0.1), {
        BackgroundTransparency = 0.5
    }):Play()
    
    wait(0.1)
    
    TweenService:Create(getKeyButton, TweenInfo.new(0.1), {
        BackgroundTransparency = 0.2
    }):Play()
    
    -- Имитация открытия ссылки
    wait(1.5)
    showStatus("Ссылка на получение ключа скопирована в буфер обмена!", colors.success, 3)
end)

-- Обработчик нажатия клавиши Enter в поле ввода
keyInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        verifyKey()
    end
end)

-- Кнопка закрытия
local closeButton = Instance.new("ImageButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -40, 0, 10)
closeButton.BackgroundTransparency = 1
closeButton.Image = "rbxassetid://76797312599260" -- ID изображения из исходного кода
closeButton.ImageColor3 = colors.textSecondary
closeButton.ZIndex = 12
closeButton.Parent = mainCard

-- Эффект наведения на кнопку закрытия
closeButton.MouseEnter:Connect(function()
    TweenService:Create(closeButton, TweenInfo.new(0.3), {
        ImageColor3 = colors.error
    }):Play()
end)

closeButton.MouseLeave:Connect(function()
    TweenService:Create(closeButton, TweenInfo.new(0.3), {
        ImageColor3 = colors.textSecondary
    }):Play()
end)

-- Обработчик нажатия на кнопку закрытия
closeButton.MouseButton1Click:Connect(function()
    -- Анимация закрытия
    TweenService:Create(mainCard, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Position = UDim2.new(0.5, -225, 1.5, -250),
        Size = UDim2.new(0, 450, 0, 100)
    }):Play()
    
    TweenService:Create(background, TweenInfo.new(0.8), {
        BackgroundTransparency = 1
    }):Play()
    
    wait(0.8)
    screenGui:Destroy()
end)

-- Анимация появления интерфейса
mainCard.Position = UDim2.new(0.5, -225, -0.5, -250)
background.BackgroundTransparency = 1

-- Запускаем анимацию появления
TweenService:Create(background, TweenInfo.new(0.8), {
    BackgroundTransparency = 0
}):Play()

TweenService:Create(mainCard, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Position = UDim2.new(0.5, -225, 0.5, -250)
}):Play()

-- Создание плавающей иконки
local floatingIcon = Instance.new("ImageButton")
floatingIcon.Name = "FloatingIcon"
floatingIcon.Size = UDim2.new(0, 60, 0, 60)
floatingIcon.Position = UDim2.new(0.1, 0, 0.1, 0)
floatingIcon.BackgroundColor3 = colors.accent
floatingIcon.Image = "rbxassetid://117511501336791"
floatingIcon.ImageColor3 = colors.text
floatingIcon.BackgroundTransparency = 0.2
floatingIcon.Visible = false
floatingIcon.ZIndex = 100
floatingIcon.Parent = screenGui

-- Закругление углов плавающей иконки
local floatingIconCorner = Instance.new("UICorner")
floatingIconCorner.CornerRadius = UDim.new(1, 0)
floatingIconCorner.Parent = floatingIcon

-- Тень для плавающей иконки
local floatingIconShadow = Instance.new("ImageLabel")
floatingIconShadow.Size = UDim2.new(1, 20, 1, 20)
floatingIconShadow.Position = UDim2.new(0, -10, 0, -10)
floatingIconShadow.BackgroundTransparency = 1
floatingIconShadow.Image = "rbxassetid://6014257812"
floatingIconShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
floatingIconShadow.ImageTransparency = 0.6
floatingIconShadow.ZIndex = 99
floatingIconShadow.Parent = floatingIcon

-- Свечение для плавающей иконки
local floatingIconGlow = Instance.new("UIStroke")
floatingIconGlow.Color = colors.accent
floatingIconGlow.Transparency = 0.5
floatingIconGlow.Thickness = 2
floatingIconGlow.Parent = floatingIcon

-- Анимация свечения плавающей иконки
spawn(function()
    while true do
        for i = 0.3, 0.8, 0.01 do
            if floatingIconGlow then
                floatingIconGlow.Transparency = i
            else
                break
            end
            wait(0.03)
        end
        for i = 0.8, 0.3, -0.01 do
            if floatingIconGlow then
                floatingIconGlow.Transparency = i
            else
                break
            end
            wait(0.03)
        end
    end
end)

-- Делаем плавающую иконку перетаскиваемой
local dragging = false
local dragInput
local dragStart
local startPos

floatingIcon.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = floatingIcon.Position
        
        -- Анимация нажатия
        TweenService:Create(floatingIcon, TweenInfo.new(0.2), {
            Size = UDim2.new(0, 55, 0, 55)
        }):Play()
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                
                -- Анимация отпускания
                TweenService:Create(floatingIcon, TweenInfo.new(0.2), {
                    Size = UDim2.new(0, 60, 0, 60)
                }):Play()
            end
        end)
    end
end)

floatingIcon.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        floatingIcon.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Эффект нажатия на плавающую иконку
floatingIcon.MouseButton1Click:Connect(function()
    -- Показываем интерфейс снова
    screenGui.Enabled = true
    floatingIcon.Visible = false
    
    -- Анимация появления интерфейса
    mainCard.Position = UDim2.new(0.5, -225, -0.5, -250)
    background.BackgroundTransparency = 1
    
    TweenService:Create(background, TweenInfo.new(0.8), {
        BackgroundTransparency = 0
    }):Play()
    
    TweenService:Create(mainCard, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0.5, -225, 0.5, -250)
    }):Play()
end)

-- Возвращаем созданный GUI
return screenGui
