-- GUI Module: Улучшенная версия системы аутентификации Quest X
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Создание ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "QUESTXGUI"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 999999
screenGui.ScreenInsets = Enum.ScreenInsets.None
screenGui.Parent = game.CoreGui

-- Добавление размытия фона (современный эффект)
local blurEffect = Instance.new("BlurEffect")
blurEffect.Size = 0
blurEffect.Parent = game.Lighting

-- Фон с градиентом (более премиальный вид)
local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.fromScale(2, 2)
frame.Position = UDim2.fromScale(-0.5, -0.5)
frame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
frame.BackgroundTransparency = 0.1
frame.BorderSizePixel = 0
frame.ZIndex = 1
frame.Parent = screenGui

-- Добавление стильного градиентного фона
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 35)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(15, 15, 20)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 15))
})
gradient.Rotation = 45
gradient.Parent = frame

-- Создание анимированных частиц на фоне
local particlesContainer = Instance.new("Frame")
particlesContainer.Size = UDim2.fromScale(1, 1)
particlesContainer.Position = UDim2.fromScale(0, 0)
particlesContainer.BackgroundTransparency = 1
particlesContainer.ZIndex = 2
particlesContainer.Parent = frame

-- Функция для создания анимированной частицы
local function createParticle()
    local particle = Instance.new("Frame")
    particle.BackgroundColor3 = Color3.fromRGB(227, 16, 16)
    particle.BackgroundTransparency = 0.7
    particle.BorderSizePixel = 0
    
    local size = math.random(2, 5)
    particle.Size = UDim2.new(0, size, 0, size)
    
    local xPos = math.random(0, particlesContainer.AbsoluteSize.X)
    local yPos = math.random(0, particlesContainer.AbsoluteSize.Y)
    particle.Position = UDim2.new(0, xPos, 0, yPos)
    
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(1, 0)
    uiCorner.Parent = particle
    
    particle.Parent = particlesContainer
    
    -- Анимация для частицы
    spawn(function()
        local duration = math.random(5, 15)
        local info = TweenInfo.new(
            duration,
            Enum.EasingStyle.Linear,
            Enum.EasingDirection.Out
        )
        
        local newY = yPos - math.random(100, 300)
        local newX = xPos + math.random(-50, 50)
        
        local tween = TweenService:Create(particle, info, {
            Position = UDim2.new(0, newX, 0, newY),
            BackgroundTransparency = 1,
            Rotation = math.random(-180, 180)
        })
        
        tween:Play()
        
        tween.Completed:Connect(function()
            particle:Destroy()
        end)
    end)
end

-- Генерация частиц с интервалом
spawn(function()
    while true do
        wait(0.3)
        for i = 1, 3 do
            createParticle()
        end
    end
end)

-- Центрированный контейнер для элементов GUI с анимированной рамкой
local centerFrame = Instance.new("Frame")
centerFrame.Name = "CenterFrame"
centerFrame.Size = UDim2.new(0, 450, 0, 350)
centerFrame.Position = UDim2.new(0.5, -225, 0.5, -175)
centerFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
centerFrame.BackgroundTransparency = 0.1
centerFrame.ZIndex = 3
centerFrame.Parent = screenGui

-- Добавление закругленных углов
local cornerRadius = Instance.new("UICorner")
cornerRadius.CornerRadius = UDim.new(0, 15)
cornerRadius.Parent = centerFrame

-- Добавление градиента на центральную панель
local panelGradient = Instance.new("UIGradient")
panelGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
})
panelGradient.Rotation = 45
panelGradient.Parent = centerFrame

-- Добавление анимированной рамки
local animatedBorder = Instance.new("UIStroke")
animatedBorder.Color = Color3.fromRGB(227, 16, 16)
animatedBorder.Thickness = 2
animatedBorder.Parent = centerFrame

-- Анимация пульсирования рамки
spawn(function()
    while wait(0.03) do
        for i = 0, 1, 0.01 do
            animatedBorder.Color = Color3.fromRGB(
                math.floor(227 * (1-i) + 150 * i),
                math.floor(16 * (1-i) + 16 * i),
                math.floor(16 * (1-i) + 80 * i)
            )
            wait(0.03)
        end
        for i = 0, 1, 0.01 do
            animatedBorder.Color = Color3.fromRGB(
                math.floor(150 * (1-i) + 227 * i),
                math.floor(16 * (1-i) + 16 * i),
                math.floor(80 * (1-i) + 16 * i)
            )
            wait(0.03)
        end
    end
end)

-- Добавление эффекта тени
local shadow = Instance.new("ImageLabel")
shadow.AnchorPoint = Vector2.new(0.5, 0.5)
shadow.BackgroundTransparency = 1
shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.ZIndex = 2
shadow.Image = "rbxassetid://6014261993"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.6
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(49, 49, 450, 450)
shadow.Parent = centerFrame

-- Создание лого вверху
local logoContainer = Instance.new("Frame")
logoContainer.Size = UDim2.new(0, 80, 0, 80)
logoContainer.Position = UDim2.new(0.5, -40, 0, -40)
logoContainer.BackgroundColor3 = Color3.fromRGB(227, 16, 16)
logoContainer.ZIndex = 5
logoContainer.Parent = centerFrame

local logoCorner = Instance.new("UICorner")
logoCorner.CornerRadius = UDim.new(1, 0)
logoCorner.Parent = logoContainer

local logoImage = Instance.new("ImageLabel")
logoImage.Size = UDim2.new(0.7, 0, 0.7, 0)
logoImage.Position = UDim2.new(0.15, 0, 0.15, 0)
logoImage.BackgroundTransparency = 1
logoImage.Image = "rbxassetid://117511501336791" -- ID вашего логотипа
logoImage.ZIndex = 6
logoImage.Parent = logoContainer

-- Анимация вращения лого
spawn(function()
    while wait() do
        local rotInfo = TweenInfo.new(10, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1)
        local rotateTween = TweenService:Create(logoImage, rotInfo, {Rotation = 360})
        rotateTween:Play()
    end
end)

-- Создание эффекта свечения вокруг лого
local glow = Instance.new("ImageLabel")
glow.AnchorPoint = Vector2.new(0.5, 0.5)
glow.BackgroundTransparency = 1
glow.Position = UDim2.new(0.5, 0, 0.5, 0)
glow.Size = UDim2.new(1.5, 0, 1.5, 0)
glow.ZIndex = 4
glow.Image = "rbxassetid://7131946145"
glow.ImageColor3 = Color3.fromRGB(227, 16, 16)
glow.ImageTransparency = 0.4
glow.Parent = logoContainer

-- Функция для создания стильных текстовых меток
local function createTextLabel(parent, text, position, size, textSize, font, weight)
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = size or UDim2.new(0, 200, 0, 30)
    textLabel.Position = position
    textLabel.Text = text
    textLabel.Font = font or Enum.Font.GothamMedium
    textLabel.TextSize = textSize or 20
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.BackgroundTransparency = 1
    textLabel.TextXAlignment = Enum.TextXAlignment.Center
    textLabel.ZIndex = 5
    textLabel.Parent = parent
    
    if weight == "Bold" then
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        textLabel.Font = Enum.Font.GothamBold
    elseif weight == "Light" then
        textLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        textLabel.Font = Enum.Font.GothamMedium
    end
    
    -- Анимация появления текста
    textLabel.TextTransparency = 1
    local textTween = TweenService:Create(
        textLabel, 
        TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
        {TextTransparency = 0}
    )
    textTween:Play()
    
    return textLabel
end

-- Функция для создания улучшенного радиального загрузчика
local function createImprovedLoader(parent, position)
    local loaderContainer = Instance.new("Frame")
    loaderContainer.Size = UDim2.new(0, 30, 0, 30)
    loaderContainer.Position = position
    loaderContainer.BackgroundTransparency = 1
    loaderContainer.ZIndex = 6
    loaderContainer.Parent = parent
    
    -- Создание 3 колец загрузки для более стильного эффекта
    for i = 1, 3 do
        local loader = Instance.new("ImageLabel")
        loader.Image = "rbxassetid://3926305904"
        loader.ImageRectOffset = Vector2.new(124, 124)
        loader.ImageRectSize = Vector2.new(36, 36)
        loader.Size = UDim2.new(1, 0, 1, 0)
        loader.Position = UDim2.new(0, 0, 0, 0)
        loader.BackgroundTransparency = 1
        loader.ImageColor3 = Color3.fromRGB(227, 16, 16)
        loader.ImageTransparency = 0.2 * i
        loader.ZIndex = 6
        loader.Parent = loaderContainer
        
        -- Разное время вращения для каждого кольца
        local tweenInfo = TweenInfo.new(1 + (i * 0.5), Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1)
        local tween = TweenService:Create(loader, tweenInfo, {Rotation = 360})
        tween:Play()
    end
    
    return loaderContainer
end

-- Функция для создания анимированной галочки
local function createAnimatedCheckmark(parent, position)
    local checkContainer = Instance.new("Frame")
    checkContainer.Size = UDim2.new(0, 30, 0, 30)
    checkContainer.Position = position
    checkContainer.BackgroundTransparency = 1
    checkContainer.ZIndex = 6
    checkContainer.Parent = parent
    checkContainer.Visible = false
    
    local check = Instance.new("ImageLabel")
    check.Image = "rbxassetid://3926305904"
    check.ImageRectOffset = Vector2.new(312, 4)
    check.ImageRectSize = Vector2.new(24, 24)
    check.Size = UDim2.new(1, 0, 1, 0)
    check.BackgroundTransparency = 1
    check.ImageColor3 = Color3.fromRGB(20, 200, 20)
    check.ZIndex = 6
    check.Parent = checkContainer
    
    -- Анимация галочки при появлении
    local function animateCheckmark()
        checkContainer.Visible = true
        check.ImageTransparency = 1
        check.Size = UDim2.new(0.5, 0, 0.5, 0)
        check.Position = UDim2.new(0.25, 0, 0.25, 0)
        
        local sizeTween = TweenService:Create(
            check, 
            TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), 
            {Size = UDim2.new(1, 0, 1, 0), Position = UDim2.new(0, 0, 0, 0), ImageTransparency = 0}
        )
        sizeTween:Play()
    end
    
    return checkContainer, animateCheckmark
end

-- Создание индикаторов загрузки с современным дизайном
local status1 = createTextLabel(centerFrame, "Проверка данных...", UDim2.new(0.5, -100, 0, 80), UDim2.new(0, 200, 0, 30), 18, nil, "Light")
local loader1 = createImprovedLoader(centerFrame, UDim2.new(0.5, -130, 0, 80))
local checkmark1, animateCheck1 = createAnimatedCheckmark(centerFrame, UDim2.new(0.5, -130, 0, 80))

local status2 = createTextLabel(centerFrame, "Загрузка системы ключей...", UDim2.new(0.5, -100, 0, 115), UDim2.new(0, 200, 0, 30), 18, nil, "Light")
local loader2 = createImprovedLoader(centerFrame, UDim2.new(0.5, -130, 0, 115))
local checkmark2, animateCheck2 = createAnimatedCheckmark(centerFrame, UDim2.new(0.5, -130, 0, 115))

local status3 = createTextLabel(centerFrame, "Ожидание ввода ключа...", UDim2.new(0.5, -100, 0, 150), UDim2.new(0, 200, 0, 30), 18, nil, "Light")
local loader3 = createImprovedLoader(centerFrame, UDim2.new(0.5, -130, 0, 150))
local checkmark3, animateCheck3 = createAnimatedCheckmark(centerFrame, UDim2.new(0.5, -130, 0, 150))

-- Анимация статусных индикаторов
spawn(function()
    wait(1.5)
    loader1.Visible = false
    status1.Text = "Данные проверены!"
    animateCheck1()
    
    wait(1.2)
    loader2.Visible = false
    status2.Text = "Система ключей загружена!"
    animateCheck2()
    
    -- loader3 остается видимым до ввода ключа
end)

-- Поле ввода ключа с современным дизайном
local keyInputContainer = Instance.new("Frame")
keyInputContainer.Size = UDim2.new(0, 350, 0, 50)
keyInputContainer.Position = UDim2.new(0.5, -175, 0, 200)
keyInputContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
keyInputContainer.BorderSizePixel = 0
keyInputContainer.ZIndex = 5
keyInputContainer.Parent = centerFrame

-- Закругленные углы для поля ввода
local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 10)
inputCorner.Parent = keyInputContainer

-- Анимированная рамка для поля ввода
local inputBorder = Instance.new("UIStroke")
inputBorder.Color = Color3.fromRGB(227, 16, 16)
inputBorder.Thickness = 2
inputBorder.Parent = keyInputContainer

-- Поле ввода ключа
local keyInput = Instance.new("TextBox")
keyInput.Size = UDim2.new(0.95, 0, 0.8, 0)
keyInput.Position = UDim2.new(0.025, 0, 0.1, 0)
keyInput.BackgroundTransparency = 1
keyInput.Text = ""
keyInput.PlaceholderText = "Введите ваш ключ здесь..."
keyInput.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
keyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
keyInput.TextSize = 18
keyInput.Font = Enum.Font.GothamMedium
keyInput.ClearTextOnFocus = false
keyInput.ZIndex = 6
keyInput.Parent = keyInputContainer

-- Анимации фокуса для поля ввода
keyInput.Focused:Connect(function()
    TweenService:Create(
        inputBorder, 
        TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
        {Color = Color3.fromRGB(255, 255, 255)}
    ):Play()
end)

keyInput.FocusLost:Connect(function()
    TweenService:Create(
        inputBorder, 
        TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
        {Color = Color3.fromRGB(227, 16, 16)}
    ):Play()
end)

-- Функция для создания стильной кнопки
local function createStylishButton(parent, text, position, size, color)
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Size = size
    buttonContainer.Position = position
    buttonContainer.BackgroundColor3 = color
    buttonContainer.BorderSizePixel = 0
    buttonContainer.ZIndex = 5
    buttonContainer.Parent = parent
    
    -- Закругленные углы для кнопки
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = buttonContainer
    
    -- Эффект свечения для кнопки
    local buttonGlow = Instance.new("UIStroke")
    buttonGlow.Color = color
    buttonGlow.Thickness = 1.5
    buttonGlow.Transparency = 0.4
    buttonGlow.Parent = buttonContainer
    
    -- Градиент для кнопки
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, color),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(color.R * 0.7, color.G * 0.7, color.B * 0.7))
    })
    buttonGradient.Rotation = 90
    buttonGradient.Parent = buttonContainer
    
    -- Текст кнопки
    local buttonText = Instance.new("TextButton")
    buttonText.Size = UDim2.new(1, 0, 1, 0)
    buttonText.Position = UDim2.new(0, 0, 0, 0)
    buttonText.BackgroundTransparency = 1
    buttonText.Text = text
    buttonText.TextColor3 = Color3.fromRGB(255, 255, 255)
    buttonText.TextSize = 18
    buttonText.Font = Enum.Font.GothamBold
    buttonText.ZIndex = 6
    buttonText.Parent = buttonContainer
    
    -- Эффекты при наведении и нажатии
    buttonText.MouseEnter:Connect(function()
        TweenService:Create(
            buttonContainer, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {BackgroundColor3 = Color3.fromRGB(color.R * 1.2, color.G * 1.2, color.B * 1.2)}
        ):Play()
        
        TweenService:Create(
            buttonText, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {TextSize = 20}
        ):Play()
    end)
    
    buttonText.MouseLeave:Connect(function()
        TweenService:Create(
            buttonContainer, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {BackgroundColor3 = color}
        ):Play()
        
        TweenService:Create(
            buttonText, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad), 
            {TextSize = 18}
        ):Play()
    end)
    
    buttonText.MouseButton1Down:Connect(function()
        TweenService:Create(
            buttonContainer, 
            TweenInfo.new(0.1, Enum.EasingStyle.Quad), 
            {Size = UDim2.new(size.X.Scale, size.X.Offset * 0.95, size.Y.Scale, size.Y.Offset * 0.95),
             Position = UDim2.new(position.X.Scale, position.X.Offset + size.X.Offset * 0.025, position.Y.Scale, position.Y.Offset + size.Y.Offset * 0.025)}
        ):Play()
    end)
    
    buttonText.MouseButton1Up:Connect(function()
        TweenService:Create(
            buttonContainer, 
            TweenInfo.new(0.1, Enum.EasingStyle.Quad), 
            {Size = size, Position = position}
        ):Play()
    end)
    
    return buttonText, buttonContainer
end

-- Создание кнопок с улучшенным дизайном
local verifyBtn, verifyBtnContainer = createStylishButton(
    centerFrame, 
    "Проверить ключ", 
    UDim2.new(0.5, -175, 0, 265), 
    UDim2.new(0, 350, 0, 50), 
    Color3.fromRGB(227, 16, 16)
)

local getKeyBtn, getKeyBtnContainer = createStylishButton(
    centerFrame, 
    "Получить ключ", 
    UDim2.new(0.5, -125, 0, 330), 
    UDim2.new(0, 250, 0, 45), 
    Color3.fromRGB(50, 50, 60)
)

-- Обработчик для кнопки проверки ключа
verifyBtn.MouseButton1Click:Connect(function()
    local inputKey = keyInput.Text
    
    if inputKey == "" then
        -- Анимация ошибки
        for i = 1, 3 do
            TweenService:Create(keyInputContainer, TweenInfo.new(0.1), {Position = UDim2.new(0.5, -175 + 5, 0, 200)}):Play()
            wait(0.1)
            TweenService:Create(keyInputContainer, TweenInfo.new(0.1), {Position = UDim2.new(0.5, -175 - 5, 0, 200)}):Play()
            wait(0.1)
        end
        TweenService:Create(keyInputContainer, TweenInfo.new(0.1), {Position = UDim2.new(0.5, -175, 0, 200)}):Play()
        return
    end
    
    -- Анимация загрузки проверки
    verifyBtn.Text = "Проверка..."
    loader3.Visible = true
    checkmark3.Visible = false
    
    -- Имитация проверки ключа (здесь будет ваша логика проверки)
    wait(2)
    
    -- Эмуляция успешной проверки
    loader3.Visible = false
    status3.Text = "Ключ подтвержден!"
    animateCheck3()
    
    -- Анимация успеха
    TweenService:Create(verifyBtnContainer, TweenInfo.new(0.5), 
        {BackgroundColor3 = Color3.fromRGB(16, 180, 16)}):Play()
    verifyBtn.Text = "Успешно!"
    
    -- Плавное исчезновение интерфейса после успешной аутентификации
    wait(1.5)
    
    TweenService:Create(centerFrame, TweenInfo.new(0.8), {Position = UDim2.new(0.5, -225, 1.5, 0)}):Play()
    TweenService:Create(blurEffect, TweenInfo.new(0.8), {Size = 0}):Play()
    TweenService:Create(frame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
    
    wait(1)
    screenGui:Destroy()
end)

-- Обработчик для кнопки получения ключа
getKeyBtn.MouseButton1Click:Connect(function()
    -- Анимация нажатия
    getKeyBtn.Text = "Переход..."
    
    -- Здесь будет ваша логика для перехода на страницу получения ключа
    -- Например, открытие нового окна или переход по ссылке
    
    -- Для примера, просто восстанавливаем текст кнопки
    wait(1)
    getKeyBtn.Text = "Получить ключ"
end)

-- Кнопка закрытия с современным дизайном
local closeButton = Instance.new("ImageButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -40, 0, 10)
closeButton.BackgroundTransparency = 1
closeButton.Image = "rbxassetid://3926305904"  -- Roblox asset ID для иконки закрытия
closeButton.ImageRectOffset = Vector2.new(284, 4)
closeButton.ImageRectSize = Vector2.new(24, 24)
closeButton.ImageColor3 = Color3.fromRGB(255, 255, 255)
closeButton.ZIndex = 6
closeButton.Parent = centerFrame

-- Анимация при наведении на кнопку закрытия
closeButton.MouseEnter:Connect(function()
    TweenService:Create(closeButton, TweenInfo.new(0.3), {ImageColor3 = Color3.fromRGB(227, 16, 16)}):Play()
end)

closeButton.MouseLeave:Connect(function()
    TweenService:Create(closeButton, TweenInfo.new(0.3), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
end)

-- Обработчик для кнопки закрытия
closeButton.MouseButton1Click:Connect(function()
    -- Анимация закрытия
    TweenService:Create(centerFrame, TweenInfo.new(0.5), {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
    TweenService:Create(blurEffect, TweenInfo.new(0.5), {Size = 0}):Play()
    TweenService:Create(frame, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
    
    wait(0.5)
    screenGui:Destroy()
end)

-- Анимация начального появления
do
    -- Сначала скрываем все элементы
    centerFrame.Size = UDim2.new(0, 0, 0, 0)
    centerFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    blurEffect.Size = 0
    frame.BackgroundTransparency = 1
    
    -- Анимация появления
    TweenService:Create(blurEffect, TweenInfo.new(1), {Size = 10}):Play()
    TweenService:Create(frame, TweenInfo.new(1), {BackgroundTransparency = 0.1}):Play()
    
    wait(0.3)
    
    TweenService:Create(
        centerFrame, 
        TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out), 
        {Size = UDim2.new(0, 450, 0, 350), Position = UDim2.new(0.5, -225, 0.5, -175)}
    ):Play()
end

-- Обновление позиции и размера фона при изменении размера экрана
RunService.RenderStepped:Connect(function()
    local viewportSize = workspace.CurrentCamera.ViewportSize
    frame.Size = UDim2.new(0, viewportSize.X * 2, 0, viewportSize.Y * 2)
    frame.Position = UDim2.new(0.5, -viewportSize.X, 0.5, -viewportSize.Y)
end)

-- Возвращаем созданный GUI (если используется как модуль)
return screenGui
