local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- Константы и настройки
local THEME = {
    PRIMARY = Color3.fromRGB(227, 16, 16),     -- Основной акцентный цвет (красный)
    PRIMARY_DARK = Color3.fromRGB(180, 12, 12), -- Темнее основного
    SECONDARY = Color3.fromRGB(16, 16, 20),    -- Вторичный цвет (темный)
    BACKGROUND = Color3.fromRGB(12, 12, 15),   -- Цвет фона
    TEXT_PRIMARY = Color3.fromRGB(255, 255, 255), -- Основной цвет текста
    TEXT_SECONDARY = Color3.fromRGB(180, 180, 180), -- Вторичный цвет текста
    SUCCESS = Color3.fromRGB(46, 204, 113),    -- Цвет успеха
    WARNING = Color3.fromRGB(241, 196, 15),    -- Цвет предупреждения
    ERROR = Color3.fromRGB(231, 76, 60)        -- Цвет ошибки
}

-- Создание ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "QUESTXGUI"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 999999
screenGui.ScreenInsets = Enum.ScreenInsets.None
screenGui.Parent = game.CoreGui

-- Создание затемненного фона с блюр-эффектом
local blurEffect = Instance.new("BlurEffect")
blurEffect.Size = 0
blurEffect.Parent = game.Lighting

local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.fromScale(2, 2)
frame.Position = UDim2.fromScale(-0.5, -0.5)
frame.BackgroundColor3 = THEME.BACKGROUND
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.ZIndex = 1
frame.Parent = screenGui

-- Добавление градиентного наложения на фон
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 25)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(20, 20, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
})
gradient.Rotation = 45
gradient.Parent = frame

-- Создание частиц для фонового эффекта
local function createParticles(count)
    for i = 1, count do
        local particle = Instance.new("Frame")
        particle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        particle.BackgroundTransparency = math.random(70, 90) / 100
        particle.BorderSizePixel = 0
        
        -- Рандомные размеры частиц
        local size = math.random(2, 6)
        particle.Size = UDim2.new(0, size, 0, size)
        
        -- Рандомное начальное положение
        particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
        
        -- Создаем скругленные углы
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = particle
        
        particle.Parent = frame
        
        -- Анимируем движение частиц
        spawn(function()
            while true do
                local duration = math.random(10, 20)
                local targetX = math.random()
                local targetY = math.random()
                
                local tween = TweenService:Create(
                    particle,
                    TweenInfo.new(duration, Enum.EasingStyle.Linear),
                    {Position = UDim2.new(targetX, 0, targetY, 0)}
                )
                tween:Play()
                wait(duration)
            end
        end)
    end
end

-- Создаем анимированные частицы
createParticles(40)

-- Главная панель аутентификации
local mainPanel = Instance.new("Frame")
mainPanel.Name = "MainPanel"
mainPanel.Size = UDim2.new(0, 450, 0, 500)
mainPanel.Position = UDim2.new(0.5, -225, 0.5, -250)
mainPanel.BackgroundColor3 = THEME.SECONDARY
mainPanel.BackgroundTransparency = 0.1
mainPanel.BorderSizePixel = 0
mainPanel.ZIndex = 2
mainPanel.Parent = screenGui

-- Добавление тени к панели
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.AnchorPoint = Vector2.new(0.5, 0.5)
shadow.BackgroundTransparency = 1
shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
shadow.Size = UDim2.new(1, 40, 1, 40)
shadow.ZIndex = 1
shadow.Image = "rbxassetid://6014261993"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.5
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(49, 49, 450, 450)
shadow.Parent = mainPanel

-- Скругление углов панели
local cornerRadius = Instance.new("UICorner")
cornerRadius.CornerRadius = UDim.new(0, 16)
cornerRadius.Parent = mainPanel

-- Добавление градиента к панели
local panelGradient = Instance.new("UIGradient")
panelGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 25))
})
panelGradient.Rotation = 90
panelGradient.Parent = mainPanel

-- Создание акцентной линии сверху
local accentLine = Instance.new("Frame")
accentLine.Name = "AccentLine"
accentLine.Size = UDim2.new(1, 0, 0, 5)
accentLine.Position = UDim2.new(0, 0, 0, 0)
accentLine.BorderSizePixel = 0
accentLine.ZIndex = 3
accentLine.Parent = mainPanel

-- Градиент для акцентной линии
local accentGradient = Instance.new("UIGradient")
accentGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, THEME.PRIMARY_DARK),
    ColorSequenceKeypoint.new(0.5, THEME.PRIMARY),
    ColorSequenceKeypoint.new(1, THEME.PRIMARY_DARK)
})
accentGradient.Parent = accentLine

-- Скругление углов линии
local lineCorner = Instance.new("UICorner")
lineCorner.CornerRadius = UDim.new(0, 16)
lineCorner.Parent = accentLine

-- Контейнер для содержимого
local contentContainer = Instance.new("Frame")
contentContainer.Name = "ContentContainer"
contentContainer.Size = UDim2.new(1, -60, 1, -80)
contentContainer.Position = UDim2.new(0, 30, 0, 50)
contentContainer.BackgroundTransparency = 1
contentContainer.Parent = mainPanel

-- Создание логотипа
local logoContainer = Instance.new("Frame")
logoContainer.Name = "LogoContainer"
logoContainer.Size = UDim2.new(0, 120, 0, 120)
logoContainer.Position = UDim2.new(0.5, -60, 0, 10)
logoContainer.BackgroundTransparency = 1
logoContainer.Parent = contentContainer

local logoImage = Instance.new("ImageLabel")
logoImage.Name = "Logo"
logoImage.Size = UDim2.new(1, 0, 1, 0)
logoImage.BackgroundTransparency = 1
logoImage.Image = "rbxassetid://117511501336791" -- Используем ту же иконку, что и в плавающей кнопке
logoImage.ImageColor3 = THEME.PRIMARY
logoImage.Parent = logoContainer

-- Анимация пульсации логотипа
spawn(function()
    while true do
        local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
        local tween = TweenService:Create(logoImage, tweenInfo, {Size = UDim2.new(0.95, 0, 0.95, 0)})
        tween:Play()
        wait(4)
    end
end)

-- Создание заголовка
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Text = "QUEST X"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 42
titleLabel.TextColor3 = THEME.TEXT_PRIMARY
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, 0, 0, 50)
titleLabel.Position = UDim2.new(0, 0, 0, 140)
titleLabel.Parent = contentContainer

-- Добавление эффекта свечения к тексту
local textGlow = Instance.new("UIStroke")
textGlow.Color = THEME.PRIMARY
textGlow.Thickness = 1
textGlow.Transparency = 0.8
textGlow.Parent = titleLabel

-- Подзаголовок
local subtitleLabel = Instance.new("TextLabel")
subtitleLabel.Name = "SubtitleLabel"
subtitleLabel.Text = "KEY AUTHENTICATION"
subtitleLabel.Font = Enum.Font.Gotham
subtitleLabel.TextSize = 18
subtitleLabel.TextColor3 = THEME.TEXT_SECONDARY
subtitleLabel.BackgroundTransparency = 1
subtitleLabel.Size = UDim2.new(1, 0, 0, 30)
subtitleLabel.Position = UDim2.new(0, 0, 0, 190)
subtitleLabel.Parent = contentContainer

-- Создание формы ввода ключа
local formContainer = Instance.new("Frame")
formContainer.Name = "FormContainer"
formContainer.Size = UDim2.new(1, 0, 0, 200)
formContainer.Position = UDim2.new(0, 0, 0, 230)
formContainer.BackgroundTransparency = 1
formContainer.Parent = contentContainer

-- Метка для поля ввода
local inputLabel = Instance.new("TextLabel")
inputLabel.Name = "InputLabel"
inputLabel.Text = "Enter your key:"
inputLabel.Font = Enum.Font.GothamSemibold
inputLabel.TextSize = 16
inputLabel.TextColor3 = THEME.TEXT_PRIMARY
inputLabel.TextXAlignment = Enum.TextXAlignment.Left
inputLabel.BackgroundTransparency = 1
inputLabel.Size = UDim2.new(1, 0, 0, 20)
inputLabel.Position = UDim2.new(0, 0, 0, 0)
inputLabel.Parent = formContainer

-- Создание поля ввода с улучшенным дизайном
local inputBackground = Instance.new("Frame")
inputBackground.Name = "InputBackground"
inputBackground.Size = UDim2.new(1, 0, 0, 50)
inputBackground.Position = UDim2.new(0, 0, 0, 30)
inputBackground.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
inputBackground.BorderSizePixel = 0
inputBackground.Parent = formContainer

-- Скругление углов для поля ввода
local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 10)
inputCorner.Parent = inputBackground

-- Акцентная рамка для поля ввода
local inputStroke = Instance.new("UIStroke")
inputStroke.Color = Color3.fromRGB(60, 60, 70)
inputStroke.Thickness = 1
inputStroke.Parent = inputBackground

-- Текстовое поле ввода
local keyInput = Instance.new("TextBox")
keyInput.Name = "KeyInput"
keyInput.PlaceholderText = "Enter your key here..."
keyInput.Text = ""
keyInput.Font = Enum.Font.Gotham
keyInput.TextSize = 18
keyInput.TextColor3 = THEME.TEXT_PRIMARY
keyInput.PlaceholderColor3 = Color3.fromRGB(120, 120, 130)
keyInput.BackgroundTransparency = 1
keyInput.Size = UDim2.new(1, -20, 1, 0)
keyInput.Position = UDim2.new(0, 10, 0, 0)
keyInput.Parent = inputBackground
keyInput.ClearTextOnFocus = false

-- Иконка для поля ввода
local keyIcon = Instance.new("ImageLabel")
keyIcon.Name = "KeyIcon"
keyIcon.Size = UDim2.new(0, 24, 0, 24)
keyIcon.Position = UDim2.new(0, 15, 0.5, -12)
keyIcon.BackgroundTransparency = 1
keyIcon.Image = "rbxassetid://7733715400" -- Иконка ключа
keyIcon.ImageColor3 = Color3.fromRGB(120, 120, 130)
keyIcon.Visible = false -- Скроем пока, если нужно - можно использовать
keyIcon.Parent = inputBackground

-- Кнопка проверки ключа
local verifyButton = Instance.new("TextButton")
verifyButton.Name = "VerifyButton"
verifyButton.Text = "VERIFY KEY"
verifyButton.Font = Enum.Font.GothamBold
verifyButton.TextSize = 18
verifyButton.TextColor3 = THEME.TEXT_PRIMARY
verifyButton.BackgroundColor3 = THEME.PRIMARY
verifyButton.Size = UDim2.new(1, 0, 0, 50)
verifyButton.Position = UDim2.new(0, 0, 0, 100)
verifyButton.BorderSizePixel = 0
verifyButton.AutoButtonColor = false -- Отключаем стандартный эффект нажатия, будем делать свой
verifyButton.Parent = formContainer

-- Скругление углов для кнопки
local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 10)
buttonCorner.Parent = verifyButton

-- Градиент для кнопки
local buttonGradient = Instance.new("UIGradient")
buttonGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, THEME.PRIMARY),
    ColorSequenceKeypoint.new(1, THEME.PRIMARY_DARK)
})
buttonGradient.Rotation = 90
buttonGradient.Parent = verifyButton

-- Создание эффекта свечения для кнопки
local glow = Instance.new("ImageLabel")
glow.Name = "Glow"
glow.BackgroundTransparency = 1
glow.Image = "rbxassetid://6014261993"
glow.ImageColor3 = THEME.PRIMARY
glow.ImageTransparency = 0.7
glow.Size = UDim2.new(1, 20, 1, 20)
glow.Position = UDim2.new(0, -10, 0, -10)
glow.ScaleType = Enum.ScaleType.Slice
glow.SliceCenter = Rect.new(49, 49, 450, 450)
glow.ZIndex = 1
glow.Parent = verifyButton

-- Кнопка "Get Key"
local getKeyButton = Instance.new("TextButton")
getKeyButton.Name = "GetKeyButton"
getKeyButton.Text = "GET KEY"
getKeyButton.Font = Enum.Font.GothamBold
getKeyButton.TextSize = 16
getKeyButton.TextColor3 = THEME.TEXT_PRIMARY
getKeyButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
getKeyButton.Size = UDim2.new(0.48, 0, 0, 40)
getKeyButton.Position = UDim2.new(0, 0, 0, 170)
getKeyButton.BorderSizePixel = 0
getKeyButton.AutoButtonColor = false
getKeyButton.Parent = formContainer

-- Скругление углов для кнопки Get Key
local getKeyCorner = Instance.new("UICorner")
getKeyCorner.CornerRadius = UDim.new(0, 8)
getKeyCorner.Parent = getKeyButton

-- Кнопка "Discord"
local discordButton = Instance.new("TextButton")
discordButton.Name = "DiscordButton"
discordButton.Text = "DISCORD"
discordButton.Font = Enum.Font.GothamBold
discordButton.TextSize = 16
discordButton.TextColor3 = THEME.TEXT_PRIMARY
discordButton.BackgroundColor3 = Color3.fromRGB(114, 137, 218) -- Цвет Discord
discordButton.Size = UDim2.new(0.48, 0, 0, 40)
discordButton.Position = UDim2.new(0.52, 0, 0, 170)
discordButton.BorderSizePixel = 0
discordButton.AutoButtonColor = false
discordButton.Parent = formContainer

-- Скругление углов для кнопки Discord
local discordCorner = Instance.new("UICorner")
discordCorner.CornerRadius = UDim.new(0, 8)
discordCorner.Parent = discordButton

-- Статус-сообщение
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Text = ""
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 16
statusLabel.TextColor3 = THEME.TEXT_PRIMARY
statusLabel.BackgroundTransparency = 1
statusLabel.Size = UDim2.new(1, 0, 0, 20)
statusLabel.Position = UDim2.new(0, 0, 0, 440)
statusLabel.Parent = contentContainer
statusLabel.Visible = false

-- Секция процесса аутентификации
local progressSection = Instance.new("Frame")
progressSection.Name = "ProgressSection"
progressSection.Size = UDim2.new(0.8, 0, 0, 150)
progressSection.Position = UDim2.new(0.1, 0, 0, 250)
progressSection.BackgroundTransparency = 1
progressSection.Visible = false
progressSection.Parent = mainPanel

-- Функция для создания строки процесса
local function createProgressItem(text, index)
    local itemContainer = Instance.new("Frame")
    itemContainer.Name = "ProgressItem_" .. index
    itemContainer.Size = UDim2.new(1, 0, 0, 30)
    itemContainer.Position = UDim2.new(0, 0, 0, (index - 1) * 40)
    itemContainer.BackgroundTransparency = 1
    itemContainer.Parent = progressSection
    
    local statusIcon = Instance.new("Frame")
    statusIcon.Name = "StatusIcon"
    statusIcon.Size = UDim2.new(0, 22, 0, 22)
    statusIcon.Position = UDim2.new(0, 0, 0.5, -11)
    statusIcon.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    statusIcon.BorderSizePixel = 0
    statusIcon.Parent = itemContainer
    
    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(1, 0)
    iconCorner.Parent = statusIcon
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "Text"
    textLabel.Text = text
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 16
    textLabel.TextColor3 = THEME.TEXT_SECONDARY
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, -40, 1, 0)
    textLabel.Position = UDim2.new(0, 40, 0, 0)
    textLabel.Parent = itemContainer
    
    return {
        container = itemContainer,
        icon = statusIcon,
        text = textLabel
    }
end

-- Создание элементов процесса
local progressItems = {
    createProgressItem("Connecting to server...", 1),
    createProgressItem("Verifying key...", 2),
    createProgressItem("Loading modules...", 3),
    createProgressItem("Initializing Quest X...", 4)
}

-- Функция для обновления статуса элемента процесса
local function updateProgressItem(item, status, message)
    if status == "loading" then
        -- Анимация загрузки
        item.icon.BackgroundColor3 = THEME.WARNING
        
        -- Создаем эффект загрузки
        local fill = Instance.new("Frame")
        fill.Name = "LoadingFill"
        fill.Size = UDim2.new(0, 0, 1, 0)
        fill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        fill.BorderSizePixel = 0
        fill.Parent = item.icon
        
        -- Анимация заполнения
        spawn(function()
            while fill.Parent do
                local tween = TweenService:Create(
                    fill,
                    TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
                    {Size = UDim2.new(1, 0, 1, 0)}
                )
                tween:Play()
                wait(1)
                
                if fill.Parent then
                    fill.Size = UDim2.new(0, 0, 1, 0)
                end
            end
        end)
        
    elseif status == "success" then
        -- Статус успеха
        if item.icon:FindFirstChild("LoadingFill") then
            item.icon:FindFirstChild("LoadingFill"):Destroy()
        end
        
        item.icon.BackgroundColor3 = THEME.SUCCESS
        item.text.TextColor3 = THEME.TEXT_PRIMARY
        
        -- Добавляем галочку
        local checkmark = Instance.new("ImageLabel")
        checkmark.Name = "Checkmark"
        checkmark.Size = UDim2.new(0.7, 0, 0.7, 0)
        checkmark.Position = UDim2.new(0.15, 0, 0.15, 0)
        checkmark.BackgroundTransparency = 1
        checkmark.Image = "rbxassetid://7733658133" -- Галочка
        checkmark.ImageColor3 = Color3.fromRGB(255, 255, 255)
        checkmark.Parent = item.icon
        
        -- Анимация появления галочки
        checkmark.ImageTransparency = 1
        local tween = TweenService:Create(
            checkmark,
            TweenInfo.new(0.3, Enum.EasingStyle.Back),
            {ImageTransparency = 0, Size = UDim2.new(0.6, 0, 0.6, 0), Position = UDim2.new(0.2, 0, 0.2, 0)}
        )
        tween:Play()
        
    elseif status == "error" then
        -- Статус ошибки
        if item.icon:FindFirstChild("LoadingFill") then
            item.icon:FindFirstChild("LoadingFill"):Destroy()
        end
        
        item.icon.BackgroundColor3 = THEME.ERROR
        item.text.TextColor3 = THEME.ERROR
        
        -- Добавляем крестик
        local cross = Instance.new("ImageLabel")
        cross.Name = "Cross"
        cross.Size = UDim2.new(0.7, 0, 0.7, 0)
        cross.Position = UDim2.new(0.15, 0, 0.15, 0)
        cross.BackgroundTransparency = 1
        cross.Image = "rbxassetid://7733715400" -- Крестик (замените на правильный ID)
        cross.ImageColor3 = Color3.fromRGB(255, 255, 255)
        cross.Parent = item.icon
    end
    
    -- Обновляем текст, если указан
    if message then
        item.text.Text = message
    end
end

-- Кнопка закрытия
local closeButton = Instance.new("ImageButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -40, 0, 15)
closeButton.BackgroundTransparency = 1
closeButton.Image = "rbxassetid://7733715400" -- ID иконки Х
closeButton.ImageColor3 = THEME.TEXT_SECONDARY
closeButton.Parent = mainPanel

-- Плавающая иконка
local floatingIcon = Instance.new("ImageButton")
floatingIcon.Name = "FloatingIcon"
floatingIcon.Size = UDim2.new(0, 50, 0, 50)
floatingIcon.Position = UDim2.new(0.05, 0, 0.1, 0)
floatingIcon.BackgroundColor3 = THEME.SECONDARY
floatingIcon.Image = "rbxassetid://117511501336791"
floatingIcon.ImageColor3 = THEME.PRIMARY
floatingIcon.ImageTransparency = 0
floatingIcon.Visible = false
floatingIcon.Draggable = true
floatingIcon.Parent = screenGui

-- Скругление углов для плавающей иконки
local floatingCorner = Instance.new("UICorner")
floatingCorner.CornerRadius = UDim.new(1, 0)
floatingCorner.Parent = floatingIcon

-- Тень для плавающей иконки
local floatingShadow = Instance.new("ImageLabel")
floatingShadow.Name = "Shadow"
floatingShadow.AnchorPoint = Vector2.new(0.5, 0.5)
floatingShadow.BackgroundTransparency = 1
floatingShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
floatingShadow.Size = UDim2.new(1, 20, 1, 20)
floatingShadow.ZIndex = -1
floatingShadow.Image = "rbxassetid://6014261993"
floatingShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
floatingShadow.ImageTransparency = 0.5
floatingShadow.ScaleType = Enum.ScaleType.Slice
floatingShadow.SliceCenter = Rect.new(49, 49, 450, 450)
floatingShadow.Parent = floatingIcon

-- Добавляем небольшую пульсацию для плавающей иконки
spawn(function()
    while true do
        local tweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
        local tween = TweenService:Create(floatingIcon, tweenInfo, {
            Size = UDim2.new(0, 55, 0, 55),
            ImageTransparency = 0.1
        })
        tween:Play()
        wait(3)
    end
end)

-- Функции для интерактивности

-- Эффект наведения на кнопки
local function setupButtonHoverEffect(button, baseColor, hoverColor)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3), {BackgroundColor3 = hoverColor}):Play()
        button.Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset + 2)
        button.Position = UDim2.new(button.Position.X.Scale, button.Position.X.Offset, button.Position.Y.Scale, button.Position.Y.Offset - 1)
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3), {BackgroundColor3 = baseColor}):Play()
        button.Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset - 2)
        button.Position = UDim2.new(button.Position.X.Scale, button.Position.X.Offset, button.Position.Y.Scale, button.Position.Y.Offset + 1)
    end)
    
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset - 4, button.Size.Y.Scale, button.Size.Y.Offset - 4)}):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset + 4, button.Size.Y.Scale, button.Size.Y.Offset + 4)}):Play()
    end)
end

setupButtonHoverEffect(verifyButton, THEME.PRIMARY, Color3.fromRGB(255, 50, 50))
setupButtonHoverEffect(getKeyButton, Color3.fromRGB(40, 40, 50), Color3.fromRGB(50, 50, 60))
setupButtonHoverEffect(discordButton, Color3.fromRGB(114, 137, 218), Color3.fromRGB(134, 157, 238))

-- Эффект фокуса на текстовое поле
keyInput.Focused:Connect(function()
    TweenService:Create(inputStroke, TweenInfo.new(0.3), {Color = THEME.PRIMARY}):Play()
    TweenService:Create(inputBackground, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(35, 35, 40)}):Play()
end)

keyInput.FocusLost:Connect(function()
    TweenService:Create(inputStroke, TweenInfo.new(0.3), {Color = Color3.fromRGB(60, 60, 70)}):Play()
    TweenService:Create(inputBackground, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(30, 30, 35)}):Play()
end)

-- Анимация появления интерфейса
mainPanel.Size = UDim2.new(0, 450, 0, 0)
mainPanel.Position = UDim2.new(0.5, -225, 0.5, 0)
blurEffect.Size = 0

local function showInterface()
    -- Анимируем появление панели
    local panelTween = TweenService:Create(
        mainPanel,
        TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {Size = UDim2.new(0, 450, 0, 500), Position = UDim2.new(0.5, -225, 0.5, -250)}
    )
    
    -- Анимируем появление блюра
    local blurTween = TweenService:Create(
        blurEffect,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Size = 20}
    )
    
    -- Анимируем появление фона
    local frameTween = TweenService:Create(
        frame,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {BackgroundTransparency = 0.2}
    )
    
    panelTween:Play()
    blurTween:Play()
    frameTween:Play()
    
    -- Анимируем элементы в контейнере
    for i, child in pairs(contentContainer:GetChildren()) do
        child.Position = UDim2.new(child.Position.X.Scale, child.Position.X.Offset, child.Position.Y.Scale, child.Position.Y.Offset + 50)
        child.BackgroundTransparency = 1
        if child:IsA("TextLabel") or child:IsA("TextButton") then
            child.TextTransparency = 1
        elseif child:IsA("ImageLabel") or child:IsA("ImageButton") then
            child.ImageTransparency = 1
        end
        
        delay(0.1 + (i * 0.05), function()
            local childTween = TweenService:Create(
                child,
                TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {
                    Position = UDim2.new(child.Position.X.Scale, child.Position.X.Offset, child.Position.Y.Scale, child.Position.Y.Offset - 50),
                    BackgroundTransparency = child.BackgroundTransparency == 1 and 1 or 0
                }
            )
            childTween:Play()
            
            if child:IsA("TextLabel") or child:IsA("TextButton") then
                TweenService:Create(child, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
            elseif child:IsA("ImageLabel") or child:IsA("ImageButton") then
                TweenService:Create(child, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()
            end
        end)
    end
end

-- Анимации появления подкомпонентов с задержкой
local function animateWithDelay(object, delay, properties)
    object.BackgroundTransparency = 1
    if object:IsA("TextLabel") or object:IsA("TextButton") then
        object.TextTransparency = 1
    elseif object:IsA("ImageLabel") or object:IsA("ImageButton") then
        object.ImageTransparency = 1
    end
    
    wait(delay)
    
    local tween = TweenService:Create(
        object,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        properties
    )
    tween:Play()
end

-- Закрытие интерфейса
local function hideInterface()
    local panelTween = TweenService:Create(
        mainPanel,
        TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In),
        {Size = UDim2.new(0, 450, 0, 0), Position = UDim2.new(0.5, -225, 0.5, 0)}
    )
    
    local blurTween = TweenService:Create(
        blurEffect,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Size = 0}
    )
    
    local frameTween = TweenService:Create(
        frame,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {BackgroundTransparency = 1}
    )
    
    panelTween:Play()
    blurTween:Play()
    frameTween:Play()
    
    wait(0.5)
    floatingIcon.Visible = true
end

-- Обработчики событий

-- Закрытие при нажатии на крестик
closeButton.MouseButton1Click:Connect(hideInterface)

-- Открытие при нажатии на плавающую иконку
floatingIcon.MouseButton1Click:Connect(function()
    floatingIcon.Visible = false
    showInterface()
end)

-- Проверка ключа
verifyButton.MouseButton1Click:Connect(function()
    local key = keyInput.Text
    
    if key == "" then
        -- Показываем предупреждение
        statusLabel.Text = "Please enter a key!"
        statusLabel.TextColor3 = THEME.ERROR
        statusLabel.Visible = true
        
        -- Анимируем предупреждение
        statusLabel.Position = UDim2.new(0, 0, 0, 430)
        TweenService:Create(statusLabel, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = UDim2.new(0, 0, 0, 440)}):Play()
        
        -- Трясем поле ввода
        local originalPosition = inputBackground.Position
        for i = 1, 5 do
            TweenService:Create(inputBackground, TweenInfo.new(0.05), {Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset + 5, originalPosition.Y.Scale, originalPosition.Y.Offset)}):Play()
            wait(0.05)
            TweenService:Create(inputBackground, TweenInfo.new(0.05), {Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset - 5, originalPosition.Y.Scale, originalPosition.Y.Offset)}):Play()
            wait(0.05)
        end
        TweenService:Create(inputBackground, TweenInfo.new(0.05), {Position = originalPosition}):Play()
        
        return
    end
    
    -- Скрываем форму и показываем прогресс
    TweenService:Create(formContainer, TweenInfo.new(0.3), {Position = UDim2.new(0, 0, 0, 230), BackgroundTransparency = 1}):Play()
    for _, child in pairs(formContainer:GetChildren()) do
        if child:IsA("TextLabel") or child:IsA("TextButton") then
            TweenService:Create(child, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
        elseif child:IsA("Frame") then
            TweenService:Create(child, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
            for _, subchild in pairs(child:GetChildren()) do
                if subchild:IsA("TextLabel") or subchild:IsA("TextButton") or subchild:IsA("TextBox") then
                    TweenService:Create(subchild, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
                end
            end
        end
    end
    
    wait(0.3)
    formContainer.Visible = false
    progressSection.Visible = true
    
    -- Симулируем процесс проверки ключа
    spawn(function()
        -- Первый этап
        updateProgressItem(progressItems[1], "loading")
        wait(1.2)
        updateProgressItem(progressItems[1], "success", "Connected to server")
        
        -- Второй этап
        updateProgressItem(progressItems[2], "loading")
        wait(2)
        
        if key == "ValidKey123" then -- Замените на вашу проверку ключа
            updateProgressItem(progressItems[2], "success", "Key verified successfully")
            
            -- Третий этап
            updateProgressItem(progressItems[3], "loading")
            wait(1.5)
            updateProgressItem(progressItems[3], "success", "Modules loaded")
            
            -- Четвертый этап
            updateProgressItem(progressItems[4], "loading")
            wait(1)
            updateProgressItem(progressItems[4], "success", "Quest X initialized")
            
            -- Успешное завершение
            wait(1)
            hideInterface()
            -- Здесь можно запустить основной скрипт после успешной аутентификации
        else
            updateProgressItem(progressItems[2], "error", "Invalid key provided")
            
            -- Возвращаем форму через 2 секунды
            wait(2)
            progressSection.Visible = false
            formContainer.Visible = true
            
            TweenService:Create(formContainer, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
            for _, child in pairs(formContainer:GetChildren()) do
                if child:IsA("TextLabel") or child:IsA("TextButton") then
                    TweenService:Create(child, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
                elseif child:IsA("Frame") then
                    TweenService:Create(child, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
                    for _, subchild in pairs(child:GetChildren()) do
                        if subchild:IsA("TextLabel") or subchild:IsA("TextButton") or subchild:IsA("TextBox") then
                            TweenService:Create(subchild, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
                        end
                    end
                end
            end
            
            -- Показываем сообщение об ошибке
            statusLabel.Text = "Invalid key! Please try again or get a new key."
            statusLabel.TextColor3 = THEME.ERROR
            statusLabel.Visible = true
        end
    end)
end)

-- Кнопка получения ключа
getKeyButton.MouseButton1Click:Connect(function()
    -- Здесь можно открыть ссылку на сайт с получением ключа
    statusLabel.Text = "Opening link to get key..."
    statusLabel.TextColor3 = THEME.TEXT_PRIMARY
    statusLabel.Visible = true
    
    -- Симуляция открытия ссылки
    -- Обычно использовалось бы что-то вроде game:GetService('HttpService'):OpenBrowserWindow("https://yourwebsite.com/getkey")
end)

-- Кнопка присоединения к Discord
discordButton.MouseButton1Click:Connect(function()
    statusLabel.Text = "Opening Discord invite..."
    statusLabel.TextColor3 = THEME.TEXT_PRIMARY
    statusLabel.Visible = true
    
    -- Симуляция открытия ссылки Discord
    -- Обычно использовалось бы что-то вроде game:GetService('HttpService'):OpenBrowserWindow("https://discord.gg/yourserver")
end)

-- Адаптивность размеров фона относительно камеры
RunService.RenderStepped:Connect(function()
    local viewportSize = workspace.CurrentCamera.ViewportSize
    frame.Size = UDim2.new(0, viewportSize.X * 2, 0, viewportSize.Y * 2)
    frame.Position = UDim2.new(0.5, -viewportSize.X, 0.5, -viewportSize.Y)
end)

-- Запускаем интерфейс
showInterface()

-- Возвращаем экземпляр ScreenGui для использования в качестве модуля
return {
    gui = screenGui,
    showInterface = showInterface,
    hideInterface = hideInterface
}
